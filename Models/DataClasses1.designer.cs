#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatSan.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDatSan")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        public DataClasses1DataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDatSanConnectionString"].ConnectionString, mappingSource)
        {

        }
        #region Extensibility Method Definitions
        partial void OnCreated();
    partial void InsertSanCauLong(SanCauLong instance);
    partial void UpdateSanCauLong(SanCauLong instance);
    partial void DeleteSanCauLong(SanCauLong instance);
    partial void InsertChiTietDanhGia(ChiTietDanhGia instance);
    partial void UpdateChiTietDanhGia(ChiTietDanhGia instance);
    partial void DeleteChiTietDanhGia(ChiTietDanhGia instance);
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertDonDat(DonDat instance);
    partial void UpdateDonDat(DonDat instance);
    partial void DeleteDonDat(DonDat instance);
    partial void InsertDanhGiaSan(DanhGiaSan instance);
    partial void UpdateDanhGiaSan(DanhGiaSan instance);
    partial void DeleteDanhGiaSan(DanhGiaSan instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLichSan(LichSan instance);
    partial void UpdateLichSan(LichSan instance);
    partial void DeleteLichSan(LichSan instance);
    partial void InsertLichSuHoatDong(LichSuHoatDong instance);
    partial void UpdateLichSuHoatDong(LichSuHoatDong instance);
    partial void DeleteLichSuHoatDong(LichSuHoatDong instance);
    partial void InsertLichSuThanhToan(LichSuThanhToan instance);
    partial void UpdateLichSuThanhToan(LichSuThanhToan instance);
    partial void DeleteLichSuThanhToan(LichSuThanhToan instance);
    partial void InsertLoaiSan(LoaiSan instance);
    partial void UpdateLoaiSan(LoaiSan instance);
    partial void DeleteLoaiSan(LoaiSan instance);
    partial void InsertPhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void UpdatePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void DeletePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void InsertQuanTriVien(QuanTriVien instance);
    partial void UpdateQuanTriVien(QuanTriVien instance);
    partial void DeleteQuanTriVien(QuanTriVien instance);
    partial void InsertResetMatKhau(ResetMatKhau instance);
    partial void UpdateResetMatKhau(ResetMatKhau instance);
    partial void DeleteResetMatKhau(ResetMatKhau instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    partial void InsertThongBao(ThongBao instance);
    partial void UpdateThongBao(ThongBao instance);
    partial void DeleteThongBao(ThongBao instance);
    partial void InsertChiTietSan(ChiTietSan instance);
    partial void UpdateChiTietSan(ChiTietSan instance);
    partial void DeleteChiTietSan(ChiTietSan instance);
    partial void InsertChiTietDonDat(ChiTietDonDat instance);
    partial void UpdateChiTietDonDat(ChiTietDonDat instance);
    partial void DeleteChiTietDonDat(ChiTietDonDat instance);
    partial void InsertDungCu(DungCu instance);
    partial void UpdateDungCu(DungCu instance);
    partial void DeleteDungCu(DungCu instance);
    partial void InsertHang(Hang instance);
    partial void UpdateHang(Hang instance);
    partial void DeleteHang(Hang instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertCTDatHang(CTDatHang instance);
    partial void UpdateCTDatHang(CTDatHang instance);
    partial void DeleteCTDatHang(CTDatHang instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SanCauLong> SanCauLongs
		{
			get
			{
				return this.GetTable<SanCauLong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDanhGia> ChiTietDanhGias
		{
			get
			{
				return this.GetTable<ChiTietDanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DonDat> DonDats
		{
			get
			{
				return this.GetTable<DonDat>();
			}
		}
		
		public System.Data.Linq.Table<DanhGiaSan> DanhGiaSans
		{
			get
			{
				return this.GetTable<DanhGiaSan>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LichSan> LichSans
		{
			get
			{
				return this.GetTable<LichSan>();
			}
		}
		
		public System.Data.Linq.Table<LichSuHoatDong> LichSuHoatDongs
		{
			get
			{
				return this.GetTable<LichSuHoatDong>();
			}
		}
		
		public System.Data.Linq.Table<LichSuThanhToan> LichSuThanhToans
		{
			get
			{
				return this.GetTable<LichSuThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSan> LoaiSans
		{
			get
			{
				return this.GetTable<LoaiSan>();
			}
		}
		
		public System.Data.Linq.Table<PhuongThucThanhToan> PhuongThucThanhToans
		{
			get
			{
				return this.GetTable<PhuongThucThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<QuanTriVien> QuanTriViens
		{
			get
			{
				return this.GetTable<QuanTriVien>();
			}
		}
		
		public System.Data.Linq.Table<ResetMatKhau> ResetMatKhaus
		{
			get
			{
				return this.GetTable<ResetMatKhau>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<ThongBao> ThongBaos
		{
			get
			{
				return this.GetTable<ThongBao>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietSan> ChiTietSans
		{
			get
			{
				return this.GetTable<ChiTietSan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this.GetTable<ChiTietDonDat>();
			}
		}
		
		public System.Data.Linq.Table<DungCu> DungCus
		{
			get
			{
				return this.GetTable<DungCu>();
			}
		}
		
		public System.Data.Linq.Table<Hang> Hangs
		{
			get
			{
				return this.GetTable<Hang>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<CTDatHang> CTDatHangs
		{
			get
			{
				return this.GetTable<CTDatHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanCauLong")]
	public partial class SanCauLong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SanID;
		
		private string _TenSan;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Mota;
		
		private string _HinhAnh;
		
		private string _DiaDiem;
		
		private System.Nullable<decimal> _GiaTrungBinhMoiGio;
		
		private System.Nullable<int> _TongSoSan;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DanhGiaSan> _DanhGiaSans;
		
		private EntitySet<LichSan> _LichSans;
		
		private EntitySet<ChiTietSan> _ChiTietSans;
		
		private EntitySet<ChiTietDonDat> _ChiTietDonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnTenSanChanging(string value);
    partial void OnTenSanChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnGiaTrungBinhMoiGioChanging(System.Nullable<decimal> value);
    partial void OnGiaTrungBinhMoiGioChanged();
    partial void OnTongSoSanChanging(System.Nullable<int> value);
    partial void OnTongSoSanChanged();
    #endregion
		
		public SanCauLong()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DanhGiaSans = new EntitySet<DanhGiaSan>(new Action<DanhGiaSan>(this.attach_DanhGiaSans), new Action<DanhGiaSan>(this.detach_DanhGiaSans));
			this._LichSans = new EntitySet<LichSan>(new Action<LichSan>(this.attach_LichSans), new Action<LichSan>(this.detach_LichSans));
			this._ChiTietSans = new EntitySet<ChiTietSan>(new Action<ChiTietSan>(this.attach_ChiTietSans), new Action<ChiTietSan>(this.detach_ChiTietSans));
			this._ChiTietDonDats = new EntitySet<ChiTietDonDat>(new Action<ChiTietDonDat>(this.attach_ChiTietDonDats), new Action<ChiTietDonDat>(this.detach_ChiTietDonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSan
		{
			get
			{
				return this._TenSan;
			}
			set
			{
				if ((this._TenSan != value))
				{
					this.OnTenSanChanging(value);
					this.SendPropertyChanging();
					this._TenSan = value;
					this.SendPropertyChanged("TenSan");
					this.OnTenSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(255)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(255)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTrungBinhMoiGio", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaTrungBinhMoiGio
		{
			get
			{
				return this._GiaTrungBinhMoiGio;
			}
			set
			{
				if ((this._GiaTrungBinhMoiGio != value))
				{
					this.OnGiaTrungBinhMoiGioChanging(value);
					this.SendPropertyChanging();
					this._GiaTrungBinhMoiGio = value;
					this.SendPropertyChanged("GiaTrungBinhMoiGio");
					this.OnGiaTrungBinhMoiGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoSan", DbType="Int")]
		public System.Nullable<int> TongSoSan
		{
			get
			{
				return this._TongSoSan;
			}
			set
			{
				if ((this._TongSoSan != value))
				{
					this.OnTongSoSanChanging(value);
					this.SendPropertyChanging();
					this._TongSoSan = value;
					this.SendPropertyChanged("TongSoSan");
					this.OnTongSoSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_DanhGia", Storage="_DanhGias", ThisKey="SanID", OtherKey="SanID")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_DanhGiaSan", Storage="_DanhGiaSans", ThisKey="SanID", OtherKey="SanID")]
		public EntitySet<DanhGiaSan> DanhGiaSans
		{
			get
			{
				return this._DanhGiaSans;
			}
			set
			{
				this._DanhGiaSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_LichSan", Storage="_LichSans", ThisKey="SanID", OtherKey="SanID")]
		public EntitySet<LichSan> LichSans
		{
			get
			{
				return this._LichSans;
			}
			set
			{
				this._LichSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_ChiTietSan", Storage="_ChiTietSans", ThisKey="SanID", OtherKey="SanID")]
		public EntitySet<ChiTietSan> ChiTietSans
		{
			get
			{
				return this._ChiTietSans;
			}
			set
			{
				this._ChiTietSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_ChiTietDonDat", Storage="_ChiTietDonDats", ThisKey="SanID", OtherKey="SanID")]
		public EntitySet<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this._ChiTietDonDats;
			}
			set
			{
				this._ChiTietDonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = null;
		}
		
		private void attach_DanhGiaSans(DanhGiaSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = this;
		}
		
		private void detach_DanhGiaSans(DanhGiaSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = null;
		}
		
		private void attach_LichSans(LichSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = this;
		}
		
		private void detach_LichSans(LichSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = null;
		}
		
		private void attach_ChiTietSans(ChiTietSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = this;
		}
		
		private void detach_ChiTietSans(ChiTietSan entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = null;
		}
		
		private void attach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = this;
		}
		
		private void detach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.SanCauLong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDanhGia")]
	public partial class ChiTietDanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietDanhGiaID;
		
		private int _DanhGiaID;
		
		private string _NoiDung;
		
		private EntityRef<DanhGia> _DanhGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietDanhGiaIDChanging(int value);
    partial void OnChiTietDanhGiaIDChanged();
    partial void OnDanhGiaIDChanging(int value);
    partial void OnDanhGiaIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public ChiTietDanhGia()
		{
			this._DanhGia = default(EntityRef<DanhGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietDanhGiaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietDanhGiaID
		{
			get
			{
				return this._ChiTietDanhGiaID;
			}
			set
			{
				if ((this._ChiTietDanhGiaID != value))
				{
					this.OnChiTietDanhGiaIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietDanhGiaID = value;
					this.SendPropertyChanged("ChiTietDanhGiaID");
					this.OnChiTietDanhGiaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGiaID", DbType="Int NOT NULL")]
		public int DanhGiaID
		{
			get
			{
				return this._DanhGiaID;
			}
			set
			{
				if ((this._DanhGiaID != value))
				{
					if (this._DanhGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhGiaIDChanging(value);
					this.SendPropertyChanging();
					this._DanhGiaID = value;
					this.SendPropertyChanged("DanhGiaID");
					this.OnDanhGiaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhGia_ChiTietDanhGia", Storage="_DanhGia", ThisKey="DanhGiaID", OtherKey="DanhGiaID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DanhGia DanhGia
		{
			get
			{
				return this._DanhGia.Entity;
			}
			set
			{
				DanhGia previousValue = this._DanhGia.Entity;
				if (((previousValue != value) 
							|| (this._DanhGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhGia.Entity = null;
						previousValue.ChiTietDanhGias.Remove(this);
					}
					this._DanhGia.Entity = value;
					if ((value != null))
					{
						value.ChiTietDanhGias.Add(this);
						this._DanhGiaID = value.DanhGiaID;
					}
					else
					{
						this._DanhGiaID = default(int);
					}
					this.SendPropertyChanged("DanhGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DanhGiaID;
		
		private int _TaiKhoanID;
		
		private int _SanID;
		
		private System.Nullable<int> _SoSao;
		
		private string _BinhLuan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<ChiTietDanhGia> _ChiTietDanhGias;
		
		private EntityRef<SanCauLong> _SanCauLong;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDanhGiaIDChanging(int value);
    partial void OnDanhGiaIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnSoSaoChanging(System.Nullable<int> value);
    partial void OnSoSaoChanged();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public DanhGia()
		{
			this._ChiTietDanhGias = new EntitySet<ChiTietDanhGia>(new Action<ChiTietDanhGia>(this.attach_ChiTietDanhGias), new Action<ChiTietDanhGia>(this.detach_ChiTietDanhGias));
			this._SanCauLong = default(EntityRef<SanCauLong>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGiaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DanhGiaID
		{
			get
			{
				return this._DanhGiaID;
			}
			set
			{
				if ((this._DanhGiaID != value))
				{
					this.OnDanhGiaIDChanging(value);
					this.SendPropertyChanging();
					this._DanhGiaID = value;
					this.SendPropertyChanged("DanhGiaID");
					this.OnDanhGiaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", DbType="Int NOT NULL")]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					if (this._SanCauLong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Int")]
		public System.Nullable<int> SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(MAX)")]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhGia_ChiTietDanhGia", Storage="_ChiTietDanhGias", ThisKey="DanhGiaID", OtherKey="DanhGiaID")]
		public EntitySet<ChiTietDanhGia> ChiTietDanhGias
		{
			get
			{
				return this._ChiTietDanhGias;
			}
			set
			{
				this._ChiTietDanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_DanhGia", Storage="_SanCauLong", ThisKey="SanID", OtherKey="SanID", IsForeignKey=true)]
		public SanCauLong SanCauLong
		{
			get
			{
				return this._SanCauLong.Entity;
			}
			set
			{
				SanCauLong previousValue = this._SanCauLong.Entity;
				if (((previousValue != value) 
							|| (this._SanCauLong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanCauLong.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._SanCauLong.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._SanID = value.SanID;
					}
					else
					{
						this._SanID = default(int);
					}
					this.SendPropertyChanged("SanCauLong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGia", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDanhGias(ChiTietDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.DanhGia = this;
		}
		
		private void detach_ChiTietDanhGias(ChiTietDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.DanhGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDat")]
	public partial class DonDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonDatID;
		
		private int _TaiKhoanID;
		
		private System.DateTime _NgayDat;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<ThanhToan> _ThanhToans;
		
		private EntitySet<ChiTietDonDat> _ChiTietDonDats;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonDatIDChanging(int value);
    partial void OnDonDatIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    #endregion
		
		public DonDat()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._ThanhToans = new EntitySet<ThanhToan>(new Action<ThanhToan>(this.attach_ThanhToans), new Action<ThanhToan>(this.detach_ThanhToans));
			this._ChiTietDonDats = new EntitySet<ChiTietDonDat>(new Action<ChiTietDonDat>(this.attach_ChiTietDonDats), new Action<ChiTietDonDat>(this.detach_ChiTietDonDats));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonDatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonDatID
		{
			get
			{
				return this._DonDatID;
			}
			set
			{
				if ((this._DonDatID != value))
				{
					this.OnDonDatIDChanging(value);
					this.SendPropertyChanging();
					this._DonDatID = value;
					this.SendPropertyChanged("DonDatID");
					this.OnDonDatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_HoaDon", Storage="_HoaDons", ThisKey="DonDatID", OtherKey="DonDatID")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ThanhToan", Storage="_ThanhToans", ThisKey="DonDatID", OtherKey="DonDatID")]
		public EntitySet<ThanhToan> ThanhToans
		{
			get
			{
				return this._ThanhToans;
			}
			set
			{
				this._ThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ChiTietDonDat", Storage="_ChiTietDonDats", ThisKey="DonDatID", OtherKey="DonDatID")]
		public EntitySet<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this._ChiTietDonDats;
			}
			set
			{
				this._ChiTietDonDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DonDat", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DonDats.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DonDats.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = null;
		}
		
		private void attach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = this;
		}
		
		private void detach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = null;
		}
		
		private void attach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = this;
		}
		
		private void detach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGiaSan")]
	public partial class DanhGiaSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DanhGiaSanID;
		
		private int _TaiKhoanID;
		
		private int _SanID;
		
		private System.Nullable<int> _SoSao;
		
		private string _BinhLuan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<SanCauLong> _SanCauLong;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDanhGiaSanIDChanging(int value);
    partial void OnDanhGiaSanIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnSoSaoChanging(System.Nullable<int> value);
    partial void OnSoSaoChanged();
    partial void OnBinhLuanChanging(string value);
    partial void OnBinhLuanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public DanhGiaSan()
		{
			this._SanCauLong = default(EntityRef<SanCauLong>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGiaSanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DanhGiaSanID
		{
			get
			{
				return this._DanhGiaSanID;
			}
			set
			{
				if ((this._DanhGiaSanID != value))
				{
					this.OnDanhGiaSanIDChanging(value);
					this.SendPropertyChanging();
					this._DanhGiaSanID = value;
					this.SendPropertyChanged("DanhGiaSanID");
					this.OnDanhGiaSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", DbType="Int NOT NULL")]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					if (this._SanCauLong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Int")]
		public System.Nullable<int> SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuan", DbType="NVarChar(MAX)")]
		public string BinhLuan
		{
			get
			{
				return this._BinhLuan;
			}
			set
			{
				if ((this._BinhLuan != value))
				{
					this.OnBinhLuanChanging(value);
					this.SendPropertyChanging();
					this._BinhLuan = value;
					this.SendPropertyChanged("BinhLuan");
					this.OnBinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_DanhGiaSan", Storage="_SanCauLong", ThisKey="SanID", OtherKey="SanID", IsForeignKey=true)]
		public SanCauLong SanCauLong
		{
			get
			{
				return this._SanCauLong.Entity;
			}
			set
			{
				SanCauLong previousValue = this._SanCauLong.Entity;
				if (((previousValue != value) 
							|| (this._SanCauLong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanCauLong.Entity = null;
						previousValue.DanhGiaSans.Remove(this);
					}
					this._SanCauLong.Entity = value;
					if ((value != null))
					{
						value.DanhGiaSans.Add(this);
						this._SanID = value.SanID;
					}
					else
					{
						this._SanID = default(int);
					}
					this.SendPropertyChanged("SanCauLong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGiaSan", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DanhGiaSans.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DanhGiaSans.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HoaDonID;
		
		private int _DonDatID;
		
		private decimal _TongTien;
		
		private System.DateTime _NgayXuatHoaDon;
		
		private EntityRef<DonDat> _DonDat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoaDonIDChanging(int value);
    partial void OnHoaDonIDChanged();
    partial void OnDonDatIDChanging(int value);
    partial void OnDonDatIDChanged();
    partial void OnTongTienChanging(decimal value);
    partial void OnTongTienChanged();
    partial void OnNgayXuatHoaDonChanging(System.DateTime value);
    partial void OnNgayXuatHoaDonChanged();
    #endregion
		
		public HoaDon()
		{
			this._DonDat = default(EntityRef<DonDat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoaDonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HoaDonID
		{
			get
			{
				return this._HoaDonID;
			}
			set
			{
				if ((this._HoaDonID != value))
				{
					this.OnHoaDonIDChanging(value);
					this.SendPropertyChanging();
					this._HoaDonID = value;
					this.SendPropertyChanged("HoaDonID");
					this.OnHoaDonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonDatID", DbType="Int NOT NULL")]
		public int DonDatID
		{
			get
			{
				return this._DonDatID;
			}
			set
			{
				if ((this._DonDatID != value))
				{
					if (this._DonDat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonDatIDChanging(value);
					this.SendPropertyChanging();
					this._DonDatID = value;
					this.SendPropertyChanged("DonDatID");
					this.OnDonDatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2) NOT NULL")]
		public decimal TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatHoaDon", DbType="DateTime NOT NULL")]
		public System.DateTime NgayXuatHoaDon
		{
			get
			{
				return this._NgayXuatHoaDon;
			}
			set
			{
				if ((this._NgayXuatHoaDon != value))
				{
					this.OnNgayXuatHoaDonChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatHoaDon = value;
					this.SendPropertyChanged("NgayXuatHoaDon");
					this.OnNgayXuatHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_HoaDon", Storage="_DonDat", ThisKey="DonDatID", OtherKey="DonDatID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DonDat DonDat
		{
			get
			{
				return this._DonDat.Entity;
			}
			set
			{
				DonDat previousValue = this._DonDat.Entity;
				if (((previousValue != value) 
							|| (this._DonDat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDat.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._DonDat.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._DonDatID = value.DonDatID;
					}
					else
					{
						this._DonDatID = default(int);
					}
					this.SendPropertyChanged("DonDat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhuyenMaiID;
		
		private string _HinhAnh;
		
		private System.Nullable<int> _GiamGiaPhanTram;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhuyenMaiIDChanging(int value);
    partial void OnKhuyenMaiIDChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGiamGiaPhanTramChanging(System.Nullable<int> value);
    partial void OnGiamGiaPhanTramChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KhuyenMai()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMaiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KhuyenMaiID
		{
			get
			{
				return this._KhuyenMaiID;
			}
			set
			{
				if ((this._KhuyenMaiID != value))
				{
					this.OnKhuyenMaiIDChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMaiID = value;
					this.SendPropertyChanged("KhuyenMaiID");
					this.OnKhuyenMaiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamGiaPhanTram", DbType="Int")]
		public System.Nullable<int> GiamGiaPhanTram
		{
			get
			{
				return this._GiamGiaPhanTram;
			}
			set
			{
				if ((this._GiamGiaPhanTram != value))
				{
					this.OnGiamGiaPhanTramChanging(value);
					this.SendPropertyChanging();
					this._GiamGiaPhanTram = value;
					this.SendPropertyChanged("GiamGiaPhanTram");
					this.OnGiamGiaPhanTramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSan")]
	public partial class LichSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LichSanID;
		
		private int _SanID;
		
		private System.DateTime _Ngay;
		
		private System.TimeSpan _ThoiGianBatDau;
		
		private System.TimeSpan _ThoiGianKetThuc;
		
		private int _SoChoTrong;
		
		private string _TrangThai;
		
		private EntityRef<SanCauLong> _SanCauLong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLichSanIDChanging(int value);
    partial void OnLichSanIDChanged();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    partial void OnThoiGianBatDauChanging(System.TimeSpan value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.TimeSpan value);
    partial void OnThoiGianKetThucChanged();
    partial void OnSoChoTrongChanging(int value);
    partial void OnSoChoTrongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public LichSan()
		{
			this._SanCauLong = default(EntityRef<SanCauLong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichSanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LichSanID
		{
			get
			{
				return this._LichSanID;
			}
			set
			{
				if ((this._LichSanID != value))
				{
					this.OnLichSanIDChanging(value);
					this.SendPropertyChanging();
					this._LichSanID = value;
					this.SendPropertyChanged("LichSanID");
					this.OnLichSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", DbType="Int NOT NULL")]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					if (this._SanCauLong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL")]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Time NOT NULL")]
		public System.TimeSpan ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Time NOT NULL")]
		public System.TimeSpan ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoChoTrong", DbType="Int NOT NULL")]
		public int SoChoTrong
		{
			get
			{
				return this._SoChoTrong;
			}
			set
			{
				if ((this._SoChoTrong != value))
				{
					this.OnSoChoTrongChanging(value);
					this.SendPropertyChanging();
					this._SoChoTrong = value;
					this.SendPropertyChanged("SoChoTrong");
					this.OnSoChoTrongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_LichSan", Storage="_SanCauLong", ThisKey="SanID", OtherKey="SanID", IsForeignKey=true)]
		public SanCauLong SanCauLong
		{
			get
			{
				return this._SanCauLong.Entity;
			}
			set
			{
				SanCauLong previousValue = this._SanCauLong.Entity;
				if (((previousValue != value) 
							|| (this._SanCauLong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanCauLong.Entity = null;
						previousValue.LichSans.Remove(this);
					}
					this._SanCauLong.Entity = value;
					if ((value != null))
					{
						value.LichSans.Add(this);
						this._SanID = value.SanID;
					}
					else
					{
						this._SanID = default(int);
					}
					this.SendPropertyChanged("SanCauLong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuHoatDong")]
	public partial class LichSuHoatDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LichSuID;
		
		private int _TaiKhoanID;
		
		private string _HanhDong;
		
		private System.DateTime _ThoiGian;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLichSuIDChanging(int value);
    partial void OnLichSuIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnHanhDongChanging(string value);
    partial void OnHanhDongChanged();
    partial void OnThoiGianChanging(System.DateTime value);
    partial void OnThoiGianChanged();
    #endregion
		
		public LichSuHoatDong()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichSuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LichSuID
		{
			get
			{
				return this._LichSuID;
			}
			set
			{
				if ((this._LichSuID != value))
				{
					this.OnLichSuIDChanging(value);
					this.SendPropertyChanging();
					this._LichSuID = value;
					this.SendPropertyChanged("LichSuID");
					this.OnLichSuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanhDong", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HanhDong
		{
			get
			{
				return this._HanhDong;
			}
			set
			{
				if ((this._HanhDong != value))
				{
					this.OnHanhDongChanging(value);
					this.SendPropertyChanging();
					this._HanhDong = value;
					this.SendPropertyChanged("HanhDong");
					this.OnHanhDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSuHoatDong", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.LichSuHoatDongs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.LichSuHoatDongs.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuThanhToan")]
	public partial class LichSuThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LichSuID;
		
		private int _ThanhToanID;
		
		private decimal _SoTien;
		
		private System.DateTime _NgayThanhToan;
		
		private EntityRef<ThanhToan> _ThanhToan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLichSuIDChanging(int value);
    partial void OnLichSuIDChanged();
    partial void OnThanhToanIDChanging(int value);
    partial void OnThanhToanIDChanged();
    partial void OnSoTienChanging(decimal value);
    partial void OnSoTienChanged();
    partial void OnNgayThanhToanChanging(System.DateTime value);
    partial void OnNgayThanhToanChanged();
    #endregion
		
		public LichSuThanhToan()
		{
			this._ThanhToan = default(EntityRef<ThanhToan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichSuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LichSuID
		{
			get
			{
				return this._LichSuID;
			}
			set
			{
				if ((this._LichSuID != value))
				{
					this.OnLichSuIDChanging(value);
					this.SendPropertyChanging();
					this._LichSuID = value;
					this.SendPropertyChanged("LichSuID");
					this.OnLichSuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToanID", DbType="Int NOT NULL")]
		public int ThanhToanID
		{
			get
			{
				return this._ThanhToanID;
			}
			set
			{
				if ((this._ThanhToanID != value))
				{
					if (this._ThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThanhToanIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhToanID = value;
					this.SendPropertyChanged("ThanhToanID");
					this.OnThanhToanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Decimal(18,2) NOT NULL")]
		public decimal SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhToan_LichSuThanhToan", Storage="_ThanhToan", ThisKey="ThanhToanID", OtherKey="ThanhToanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ThanhToan ThanhToan
		{
			get
			{
				return this._ThanhToan.Entity;
			}
			set
			{
				ThanhToan previousValue = this._ThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._ThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhToan.Entity = null;
						previousValue.LichSuThanhToans.Remove(this);
					}
					this._ThanhToan.Entity = value;
					if ((value != null))
					{
						value.LichSuThanhToans.Add(this);
						this._ThanhToanID = value.ThanhToanID;
					}
					else
					{
						this._ThanhToanID = default(int);
					}
					this.SendPropertyChanged("ThanhToan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSan")]
	public partial class LoaiSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiSanID;
		
		private string _MoTa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiSanIDChanging(int value);
    partial void OnLoaiSanIDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LoaiSan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiSanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiSanID
		{
			get
			{
				return this._LoaiSanID;
			}
			set
			{
				if ((this._LoaiSanID != value))
				{
					this.OnLoaiSanIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiSanID = value;
					this.SendPropertyChanged("LoaiSanID");
					this.OnLoaiSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuongThucThanhToan")]
	public partial class PhuongThucThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhuongThucID;
		
		private string _MoTa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhuongThucIDChanging(int value);
    partial void OnPhuongThucIDChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public PhuongThucThanhToan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhuongThucID
		{
			get
			{
				return this._PhuongThucID;
			}
			set
			{
				if ((this._PhuongThucID != value))
				{
					this.OnPhuongThucIDChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucID = value;
					this.SendPropertyChanged("PhuongThucID");
					this.OnPhuongThucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanTriVien")]
	public partial class QuanTriVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuanTriVienID;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _SoDienThoai;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuanTriVienIDChanging(int value);
    partial void OnQuanTriVienIDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public QuanTriVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTriVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuanTriVienID
		{
			get
			{
				return this._QuanTriVienID;
			}
			set
			{
				if ((this._QuanTriVienID != value))
				{
					this.OnQuanTriVienIDChanging(value);
					this.SendPropertyChanging();
					this._QuanTriVienID = value;
					this.SendPropertyChanged("QuanTriVienID");
					this.OnQuanTriVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResetMatKhau")]
	public partial class ResetMatKhau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResetID;
		
		private int _TaiKhoanID;
		
		private string _MaReset;
		
		private System.Nullable<System.DateTime> _NgayYeuCau;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResetIDChanging(int value);
    partial void OnResetIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnMaResetChanging(string value);
    partial void OnMaResetChanged();
    partial void OnNgayYeuCauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayYeuCauChanged();
    #endregion
		
		public ResetMatKhau()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResetID
		{
			get
			{
				return this._ResetID;
			}
			set
			{
				if ((this._ResetID != value))
				{
					this.OnResetIDChanging(value);
					this.SendPropertyChanging();
					this._ResetID = value;
					this.SendPropertyChanged("ResetID");
					this.OnResetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaReset", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MaReset
		{
			get
			{
				return this._MaReset;
			}
			set
			{
				if ((this._MaReset != value))
				{
					this.OnMaResetChanging(value);
					this.SendPropertyChanging();
					this._MaReset = value;
					this.SendPropertyChanged("MaReset");
					this.OnMaResetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayYeuCau", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayYeuCau
		{
			get
			{
				return this._NgayYeuCau;
			}
			set
			{
				if ((this._NgayYeuCau != value))
				{
					this.OnNgayYeuCauChanging(value);
					this.SendPropertyChanging();
					this._NgayYeuCau = value;
					this.SendPropertyChanged("NgayYeuCau");
					this.OnNgayYeuCauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ResetMatKhau", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ResetMatKhaus.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ResetMatKhaus.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaiKhoanID;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DonDat> _DonDats;
		
		private EntitySet<DanhGiaSan> _DanhGiaSans;
		
		private EntitySet<LichSuHoatDong> _LichSuHoatDongs;
		
		private EntitySet<ResetMatKhau> _ResetMatKhaus;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DonDats = new EntitySet<DonDat>(new Action<DonDat>(this.attach_DonDats), new Action<DonDat>(this.detach_DonDats));
			this._DanhGiaSans = new EntitySet<DanhGiaSan>(new Action<DanhGiaSan>(this.attach_DanhGiaSans), new Action<DanhGiaSan>(this.detach_DanhGiaSans));
			this._LichSuHoatDongs = new EntitySet<LichSuHoatDong>(new Action<LichSuHoatDong>(this.attach_LichSuHoatDongs), new Action<LichSuHoatDong>(this.detach_LichSuHoatDongs));
			this._ResetMatKhaus = new EntitySet<ResetMatKhau>(new Action<ResetMatKhau>(this.attach_ResetMatKhaus), new Action<ResetMatKhau>(this.detach_ResetMatKhaus));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGia", Storage="_DanhGias", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DonDat", Storage="_DonDats", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<DonDat> DonDats
		{
			get
			{
				return this._DonDats;
			}
			set
			{
				this._DonDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGiaSan", Storage="_DanhGiaSans", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<DanhGiaSan> DanhGiaSans
		{
			get
			{
				return this._DanhGiaSans;
			}
			set
			{
				this._DanhGiaSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSuHoatDong", Storage="_LichSuHoatDongs", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<LichSuHoatDong> LichSuHoatDongs
		{
			get
			{
				return this._LichSuHoatDongs;
			}
			set
			{
				this._LichSuHoatDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ResetMatKhau", Storage="_ResetMatKhaus", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<ResetMatKhau> ResetMatKhaus
		{
			get
			{
				return this._ResetMatKhaus;
			}
			set
			{
				this._ResetMatKhaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ThongBao", Storage="_ThongBaos", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DonDatHang", Storage="_DonDatHangs", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DanhGiaSans(DanhGiaSan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DanhGiaSans(DanhGiaSan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_LichSuHoatDongs(LichSuHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_LichSuHoatDongs(LichSuHoatDong entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ResetMatKhaus(ResetMatKhau entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ResetMatKhaus(ResetMatKhau entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThanhToanID;
		
		private int _DonDatID;
		
		private System.DateTime _NgayThanhToan;
		
		private decimal _SoTien;
		
		private string _PhuongThucThanhToan;
		
		private string _TrangThai;
		
		private EntitySet<LichSuThanhToan> _LichSuThanhToans;
		
		private EntityRef<DonDat> _DonDat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThanhToanIDChanging(int value);
    partial void OnThanhToanIDChanged();
    partial void OnDonDatIDChanging(int value);
    partial void OnDonDatIDChanged();
    partial void OnNgayThanhToanChanging(System.DateTime value);
    partial void OnNgayThanhToanChanged();
    partial void OnSoTienChanging(decimal value);
    partial void OnSoTienChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public ThanhToan()
		{
			this._LichSuThanhToans = new EntitySet<LichSuThanhToan>(new Action<LichSuThanhToan>(this.attach_LichSuThanhToans), new Action<LichSuThanhToan>(this.detach_LichSuThanhToans));
			this._DonDat = default(EntityRef<DonDat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThanhToanID
		{
			get
			{
				return this._ThanhToanID;
			}
			set
			{
				if ((this._ThanhToanID != value))
				{
					this.OnThanhToanIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhToanID = value;
					this.SendPropertyChanged("ThanhToanID");
					this.OnThanhToanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonDatID", DbType="Int NOT NULL")]
		public int DonDatID
		{
			get
			{
				return this._DonDatID;
			}
			set
			{
				if ((this._DonDatID != value))
				{
					if (this._DonDat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonDatIDChanging(value);
					this.SendPropertyChanging();
					this._DonDatID = value;
					this.SendPropertyChanged("DonDatID");
					this.OnDonDatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Decimal(18,2) NOT NULL")]
		public decimal SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhToan_LichSuThanhToan", Storage="_LichSuThanhToans", ThisKey="ThanhToanID", OtherKey="ThanhToanID")]
		public EntitySet<LichSuThanhToan> LichSuThanhToans
		{
			get
			{
				return this._LichSuThanhToans;
			}
			set
			{
				this._LichSuThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ThanhToan", Storage="_DonDat", ThisKey="DonDatID", OtherKey="DonDatID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DonDat DonDat
		{
			get
			{
				return this._DonDat.Entity;
			}
			set
			{
				DonDat previousValue = this._DonDat.Entity;
				if (((previousValue != value) 
							|| (this._DonDat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDat.Entity = null;
						previousValue.ThanhToans.Remove(this);
					}
					this._DonDat.Entity = value;
					if ((value != null))
					{
						value.ThanhToans.Add(this);
						this._DonDatID = value.DonDatID;
					}
					else
					{
						this._DonDatID = default(int);
					}
					this.SendPropertyChanged("DonDat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichSuThanhToans(LichSuThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThanhToan = this;
		}
		
		private void detach_LichSuThanhToans(LichSuThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBao")]
	public partial class ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThongBaoID;
		
		private int _TaiKhoanID;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayThongBao;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThongBaoIDChanging(int value);
    partial void OnThongBaoIDChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayThongBaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThongBaoChanged();
    #endregion
		
		public ThongBao()
		{
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongBaoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThongBaoID
		{
			get
			{
				return this._ThongBaoID;
			}
			set
			{
				if ((this._ThongBaoID != value))
				{
					this.OnThongBaoIDChanging(value);
					this.SendPropertyChanging();
					this._ThongBaoID = value;
					this.SendPropertyChanged("ThongBaoID");
					this.OnThongBaoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThongBao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThongBao
		{
			get
			{
				return this._NgayThongBao;
			}
			set
			{
				if ((this._NgayThongBao != value))
				{
					this.OnNgayThongBaoChanging(value);
					this.SendPropertyChanging();
					this._NgayThongBao = value;
					this.SendPropertyChanged("NgayThongBao");
					this.OnNgayThongBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ThongBao", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietSan")]
	public partial class ChiTietSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietSanID;
		
		private int _SanID;
		
		private decimal _GiaMoiGio;
		
		private string _SanSo;
		
		private EntityRef<SanCauLong> _SanCauLong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietSanIDChanging(int value);
    partial void OnChiTietSanIDChanged();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnGiaMoiGioChanging(decimal value);
    partial void OnGiaMoiGioChanged();
    partial void OnSanSoChanging(string value);
    partial void OnSanSoChanged();
    #endregion
		
		public ChiTietSan()
		{
			this._SanCauLong = default(EntityRef<SanCauLong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietSanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietSanID
		{
			get
			{
				return this._ChiTietSanID;
			}
			set
			{
				if ((this._ChiTietSanID != value))
				{
					this.OnChiTietSanIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietSanID = value;
					this.SendPropertyChanged("ChiTietSanID");
					this.OnChiTietSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", DbType="Int NOT NULL")]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					if (this._SanCauLong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaMoiGio", DbType="Decimal(18,2) NOT NULL")]
		public decimal GiaMoiGio
		{
			get
			{
				return this._GiaMoiGio;
			}
			set
			{
				if ((this._GiaMoiGio != value))
				{
					this.OnGiaMoiGioChanging(value);
					this.SendPropertyChanging();
					this._GiaMoiGio = value;
					this.SendPropertyChanged("GiaMoiGio");
					this.OnGiaMoiGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanSo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SanSo
		{
			get
			{
				return this._SanSo;
			}
			set
			{
				if ((this._SanSo != value))
				{
					this.OnSanSoChanging(value);
					this.SendPropertyChanging();
					this._SanSo = value;
					this.SendPropertyChanged("SanSo");
					this.OnSanSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_ChiTietSan", Storage="_SanCauLong", ThisKey="SanID", OtherKey="SanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanCauLong SanCauLong
		{
			get
			{
				return this._SanCauLong.Entity;
			}
			set
			{
				SanCauLong previousValue = this._SanCauLong.Entity;
				if (((previousValue != value) 
							|| (this._SanCauLong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanCauLong.Entity = null;
						previousValue.ChiTietSans.Remove(this);
					}
					this._SanCauLong.Entity = value;
					if ((value != null))
					{
						value.ChiTietSans.Add(this);
						this._SanID = value.SanID;
					}
					else
					{
						this._SanID = default(int);
					}
					this.SendPropertyChanged("SanCauLong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonDat")]
	public partial class ChiTietDonDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietDonDatID;
		
		private int _DonDatID;
		
		private int _SanID;
		
		private System.DateTime _ThoiGianBatDau;
		
		private System.DateTime _ThoiGianKetThuc;
		
		private string _HoTen;
		
		private string _SoDienThoai;
		
		private string _SanSo;
		
		private EntityRef<DonDat> _DonDat;
		
		private EntityRef<SanCauLong> _SanCauLong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietDonDatIDChanging(int value);
    partial void OnChiTietDonDatIDChanged();
    partial void OnDonDatIDChanging(int value);
    partial void OnDonDatIDChanged();
    partial void OnSanIDChanging(int value);
    partial void OnSanIDChanged();
    partial void OnThoiGianBatDauChanging(System.DateTime value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.DateTime value);
    partial void OnThoiGianKetThucChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnSanSoChanging(string value);
    partial void OnSanSoChanged();
    #endregion
		
		public ChiTietDonDat()
		{
			this._DonDat = default(EntityRef<DonDat>);
			this._SanCauLong = default(EntityRef<SanCauLong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietDonDatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietDonDatID
		{
			get
			{
				return this._ChiTietDonDatID;
			}
			set
			{
				if ((this._ChiTietDonDatID != value))
				{
					this.OnChiTietDonDatIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietDonDatID = value;
					this.SendPropertyChanged("ChiTietDonDatID");
					this.OnChiTietDonDatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonDatID", DbType="Int NOT NULL")]
		public int DonDatID
		{
			get
			{
				return this._DonDatID;
			}
			set
			{
				if ((this._DonDatID != value))
				{
					if (this._DonDat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonDatIDChanging(value);
					this.SendPropertyChanging();
					this._DonDatID = value;
					this.SendPropertyChanged("DonDatID");
					this.OnDonDatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanID", DbType="Int NOT NULL")]
		public int SanID
		{
			get
			{
				return this._SanID;
			}
			set
			{
				if ((this._SanID != value))
				{
					if (this._SanCauLong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanIDChanging(value);
					this.SendPropertyChanging();
					this._SanID = value;
					this.SendPropertyChanged("SanID");
					this.OnSanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanSo", DbType="NVarChar(50)")]
		public string SanSo
		{
			get
			{
				return this._SanSo;
			}
			set
			{
				if ((this._SanSo != value))
				{
					this.OnSanSoChanging(value);
					this.SendPropertyChanging();
					this._SanSo = value;
					this.SendPropertyChanged("SanSo");
					this.OnSanSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ChiTietDonDat", Storage="_DonDat", ThisKey="DonDatID", OtherKey="DonDatID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DonDat DonDat
		{
			get
			{
				return this._DonDat.Entity;
			}
			set
			{
				DonDat previousValue = this._DonDat.Entity;
				if (((previousValue != value) 
							|| (this._DonDat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDat.Entity = null;
						previousValue.ChiTietDonDats.Remove(this);
					}
					this._DonDat.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonDats.Add(this);
						this._DonDatID = value.DonDatID;
					}
					else
					{
						this._DonDatID = default(int);
					}
					this.SendPropertyChanged("DonDat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanCauLong_ChiTietDonDat", Storage="_SanCauLong", ThisKey="SanID", OtherKey="SanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanCauLong SanCauLong
		{
			get
			{
				return this._SanCauLong.Entity;
			}
			set
			{
				SanCauLong previousValue = this._SanCauLong.Entity;
				if (((previousValue != value) 
							|| (this._SanCauLong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanCauLong.Entity = null;
						previousValue.ChiTietDonDats.Remove(this);
					}
					this._SanCauLong.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonDats.Add(this);
						this._SanID = value.SanID;
					}
					else
					{
						this._SanID = default(int);
					}
					this.SendPropertyChanged("SanCauLong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DungCu")]
	public partial class DungCu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDC;
		
		private string _TenDc;
		
		private System.Nullable<decimal> _DonGia;
		
		private string _MoTa;
		
		private string _HinhMinhHoa;
		
		private int _MaH;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _SoLuotBan;
		
		private int _SoLuotXem;
		
		private EntityRef<Hang> _Hang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDCChanging(int value);
    partial void OnMaDCChanged();
    partial void OnTenDcChanging(string value);
    partial void OnTenDcChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHinhMinhHoaChanging(string value);
    partial void OnHinhMinhHoaChanged();
    partial void OnMaHChanging(int value);
    partial void OnMaHChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnSoLuotBanChanging(System.Nullable<int> value);
    partial void OnSoLuotBanChanged();
    partial void OnSoLuotXemChanging(int value);
    partial void OnSoLuotXemChanged();
    #endregion
		
		public DungCu()
		{
			this._Hang = default(EntityRef<Hang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDC
		{
			get
			{
				return this._MaDC;
			}
			set
			{
				if ((this._MaDC != value))
				{
					this.OnMaDCChanging(value);
					this.SendPropertyChanging();
					this._MaDC = value;
					this.SendPropertyChanged("MaDC");
					this.OnMaDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDc
		{
			get
			{
				return this._TenDc;
			}
			set
			{
				if ((this._TenDc != value))
				{
					this.OnTenDcChanging(value);
					this.SendPropertyChanging();
					this._TenDc = value;
					this.SendPropertyChanged("TenDc");
					this.OnTenDcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhMinhHoa", DbType="NChar(10)")]
		public string HinhMinhHoa
		{
			get
			{
				return this._HinhMinhHoa;
			}
			set
			{
				if ((this._HinhMinhHoa != value))
				{
					this.OnHinhMinhHoaChanging(value);
					this.SendPropertyChanging();
					this._HinhMinhHoa = value;
					this.SendPropertyChanged("HinhMinhHoa");
					this.OnHinhMinhHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaH", DbType="Int NOT NULL")]
		public int MaH
		{
			get
			{
				return this._MaH;
			}
			set
			{
				if ((this._MaH != value))
				{
					if (this._Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHChanging(value);
					this.SendPropertyChanging();
					this._MaH = value;
					this.SendPropertyChanged("MaH");
					this.OnMaHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuotBan", DbType="Int")]
		public System.Nullable<int> SoLuotBan
		{
			get
			{
				return this._SoLuotBan;
			}
			set
			{
				if ((this._SoLuotBan != value))
				{
					this.OnSoLuotBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuotBan = value;
					this.SendPropertyChanged("SoLuotBan");
					this.OnSoLuotBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuotXem", DbType="Int NOT NULL")]
		public int SoLuotXem
		{
			get
			{
				return this._SoLuotXem;
			}
			set
			{
				if ((this._SoLuotXem != value))
				{
					this.OnSoLuotXemChanging(value);
					this.SendPropertyChanging();
					this._SoLuotXem = value;
					this.SendPropertyChanged("SoLuotXem");
					this.OnSoLuotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hang_DungCu", Storage="_Hang", ThisKey="MaH", OtherKey="MaH", IsForeignKey=true)]
		public Hang Hang
		{
			get
			{
				return this._Hang.Entity;
			}
			set
			{
				Hang previousValue = this._Hang.Entity;
				if (((previousValue != value) 
							|| (this._Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hang.Entity = null;
						previousValue.DungCus.Remove(this);
					}
					this._Hang.Entity = value;
					if ((value != null))
					{
						value.DungCus.Add(this);
						this._MaH = value.MaH;
					}
					else
					{
						this._MaH = default(int);
					}
					this.SendPropertyChanged("Hang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hang")]
	public partial class Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaH;
		
		private string _TenH;
		
		private EntitySet<DungCu> _DungCus;
		
		private EntitySet<CTDatHang> _CTDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHChanging(int value);
    partial void OnMaHChanged();
    partial void OnTenHChanging(string value);
    partial void OnTenHChanged();
    #endregion
		
		public Hang()
		{
			this._DungCus = new EntitySet<DungCu>(new Action<DungCu>(this.attach_DungCus), new Action<DungCu>(this.detach_DungCus));
			this._CTDatHangs = new EntitySet<CTDatHang>(new Action<CTDatHang>(this.attach_CTDatHangs), new Action<CTDatHang>(this.detach_CTDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaH
		{
			get
			{
				return this._MaH;
			}
			set
			{
				if ((this._MaH != value))
				{
					this.OnMaHChanging(value);
					this.SendPropertyChanging();
					this._MaH = value;
					this.SendPropertyChanged("MaH");
					this.OnMaHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenH
		{
			get
			{
				return this._TenH;
			}
			set
			{
				if ((this._TenH != value))
				{
					this.OnTenHChanging(value);
					this.SendPropertyChanging();
					this._TenH = value;
					this.SendPropertyChanged("TenH");
					this.OnTenHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hang_DungCu", Storage="_DungCus", ThisKey="MaH", OtherKey="MaH")]
		public EntitySet<DungCu> DungCus
		{
			get
			{
				return this._DungCus;
			}
			set
			{
				this._DungCus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hang_CTDatHang", Storage="_CTDatHangs", ThisKey="MaH", OtherKey="MaH")]
		public EntitySet<CTDatHang> CTDatHangs
		{
			get
			{
				return this._CTDatHangs;
			}
			set
			{
				this._CTDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DungCus(DungCu entity)
		{
			this.SendPropertyChanging();
			entity.Hang = this;
		}
		
		private void detach_DungCus(DungCu entity)
		{
			this.SendPropertyChanging();
			entity.Hang = null;
		}
		
		private void attach_CTDatHangs(CTDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Hang = this;
		}
		
		private void detach_CTDatHangs(CTDatHang entity)
		{
			this.SendPropertyChanging();
			entity.Hang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoDH;
		
		private int _TaiKhoanID;
		
		private System.Nullable<System.DateTime> _NgayDH;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<bool> _DaGiao;
		
		private System.Nullable<System.DateTime> _NgayGiaoHang;
		
		private string _TenNguoiNhan;
		
		private string _DiaChiNhan;
		
		private string _DienThoaiNhan;
		
		private System.Nullable<bool> _HTThanhToan;
		
		private bool _HTGiaoHang;
		
		private EntitySet<CTDatHang> _CTDatHangs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDHChanging(int value);
    partial void OnSoDHChanged();
    partial void OnTaiKhoanIDChanging(int value);
    partial void OnTaiKhoanIDChanged();
    partial void OnNgayDHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDHChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnDaGiaoChanging(System.Nullable<bool> value);
    partial void OnDaGiaoChanged();
    partial void OnNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoHangChanged();
    partial void OnTenNguoiNhanChanging(string value);
    partial void OnTenNguoiNhanChanged();
    partial void OnDiaChiNhanChanging(string value);
    partial void OnDiaChiNhanChanged();
    partial void OnDienThoaiNhanChanging(string value);
    partial void OnDienThoaiNhanChanged();
    partial void OnHTThanhToanChanging(System.Nullable<bool> value);
    partial void OnHTThanhToanChanged();
    partial void OnHTGiaoHangChanging(bool value);
    partial void OnHTGiaoHangChanged();
    #endregion
		
		public DonDatHang()
		{
			this._CTDatHangs = new EntitySet<CTDatHang>(new Action<CTDatHang>(this.attach_CTDatHangs), new Action<CTDatHang>(this.detach_CTDatHangs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanID", DbType="Int NOT NULL")]
		public int TaiKhoanID
		{
			get
			{
				return this._TaiKhoanID;
			}
			set
			{
				if ((this._TaiKhoanID != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanIDChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanID = value;
					this.SendPropertyChanged("TaiKhoanID");
					this.OnTaiKhoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDH", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayDH
		{
			get
			{
				return this._NgayDH;
			}
			set
			{
				if ((this._NgayDH != value))
				{
					this.OnNgayDHChanging(value);
					this.SendPropertyChanging();
					this._NgayDH = value;
					this.SendPropertyChanged("NgayDH");
					this.OnNgayDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaGiao", DbType="Bit")]
		public System.Nullable<bool> DaGiao
		{
			get
			{
				return this._DaGiao;
			}
			set
			{
				if ((this._DaGiao != value))
				{
					this.OnDaGiaoChanging(value);
					this.SendPropertyChanging();
					this._DaGiao = value;
					this.SendPropertyChanged("DaGiao");
					this.OnDaGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhan", DbType="NVarChar(50)")]
		public string TenNguoiNhan
		{
			get
			{
				return this._TenNguoiNhan;
			}
			set
			{
				if ((this._TenNguoiNhan != value))
				{
					this.OnTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhan = value;
					this.SendPropertyChanged("TenNguoiNhan");
					this.OnTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNhan", DbType="NVarChar(50)")]
		public string DiaChiNhan
		{
			get
			{
				return this._DiaChiNhan;
			}
			set
			{
				if ((this._DiaChiNhan != value))
				{
					this.OnDiaChiNhanChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhan = value;
					this.SendPropertyChanged("DiaChiNhan");
					this.OnDiaChiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiNhan", DbType="VarChar(15)")]
		public string DienThoaiNhan
		{
			get
			{
				return this._DienThoaiNhan;
			}
			set
			{
				if ((this._DienThoaiNhan != value))
				{
					this.OnDienThoaiNhanChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNhan = value;
					this.SendPropertyChanged("DienThoaiNhan");
					this.OnDienThoaiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTThanhToan", DbType="Bit")]
		public System.Nullable<bool> HTThanhToan
		{
			get
			{
				return this._HTThanhToan;
			}
			set
			{
				if ((this._HTThanhToan != value))
				{
					this.OnHTThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HTThanhToan = value;
					this.SendPropertyChanged("HTThanhToan");
					this.OnHTThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTGiaoHang", DbType="Bit NOT NULL")]
		public bool HTGiaoHang
		{
			get
			{
				return this._HTGiaoHang;
			}
			set
			{
				if ((this._HTGiaoHang != value))
				{
					this.OnHTGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._HTGiaoHang = value;
					this.SendPropertyChanged("HTGiaoHang");
					this.OnHTGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDatHang", Storage="_CTDatHangs", ThisKey="SoDH", OtherKey="SoDH")]
		public EntitySet<CTDatHang> CTDatHangs
		{
			get
			{
				return this._CTDatHangs;
			}
			set
			{
				this._CTDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DonDatHang", Storage="_TaiKhoan", ThisKey="TaiKhoanID", OtherKey="TaiKhoanID", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._TaiKhoanID = value.TaiKhoanID;
					}
					else
					{
						this._TaiKhoanID = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDatHangs(CTDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_CTDatHangs(CTDatHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDatHang")]
	public partial class CTDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoDH;
		
		private int _MaH;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private decimal _ThanhTien;
		
		private EntityRef<Hang> _Hang;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDHChanging(int value);
    partial void OnSoDHChanged();
    partial void OnMaHChanging(int value);
    partial void OnMaHChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(decimal value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTDatHang()
		{
			this._Hang = default(EntityRef<Hang>);
			this._DonDatHang = default(EntityRef<DonDatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaH
		{
			get
			{
				return this._MaH;
			}
			set
			{
				if ((this._MaH != value))
				{
					if (this._Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHChanging(value);
					this.SendPropertyChanging();
					this._MaH = value;
					this.SendPropertyChanged("MaH");
					this.OnMaHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Decimal(9,2) NOT NULL")]
		public decimal ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hang_CTDatHang", Storage="_Hang", ThisKey="MaH", OtherKey="MaH", IsForeignKey=true)]
		public Hang Hang
		{
			get
			{
				return this._Hang.Entity;
			}
			set
			{
				Hang previousValue = this._Hang.Entity;
				if (((previousValue != value) 
							|| (this._Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hang.Entity = null;
						previousValue.CTDatHangs.Remove(this);
					}
					this._Hang.Entity = value;
					if ((value != null))
					{
						value.CTDatHangs.Add(this);
						this._MaH = value.MaH;
					}
					else
					{
						this._MaH = default(int);
					}
					this.SendPropertyChanged("Hang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDatHang", Storage="_DonDatHang", ThisKey="SoDH", OtherKey="SoDH", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.CTDatHangs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.CTDatHangs.Add(this);
						this._SoDH = value.SoDH;
					}
					else
					{
						this._SoDH = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
